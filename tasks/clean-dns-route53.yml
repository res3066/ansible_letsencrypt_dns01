---
# Preemptively getting rid of any existing TXT records.
# Note that you can not do an update if a record of RRTYPE exists at said node.
# Important for when you're debugging something that blew up in the past and left
# cruft in the DNS - you'll be wondering why you can't catch a break...
# NOTE: this won't work with route 53, because we can't just make things absent without knowing the values
# so, we can only remove things that are known

- name: remove the challenges we got for all domains into the DNS
  route53:
    aws_access_key: "{{aws_key |default(omit) }}"
    aws_secret_key: "{{aws_secret |default(omit) }}"
    zone: "{{ acmecnamezone | default(item.key.split('.', 1)[1]) }}"
    record: "{{ item.key }}.{{acmecnamezone}}"
    type: TXT
    value: '"{{ item.value | first }}"'
    state: absent
    overwrite: true
  delegate_to: localhost
  with_dict: "{{ dnschallenge.challenge_data_dns }}"
  when: dnschallenge.changed

# for now, we don't clean up things we don't put there.
#- name: ensuring no existing TXT records for CN
#  route53:
#    aws_access_key: "{{aws_key |default(omit) }}"
#    aws_secret_key: "{{aws_secret |default(omit) }}"
#    zone: "{{ acmecnamezone | default(cert_hostname.split('.', 1)[1]) }}"
#    record: "_acme-challenge.{{ cert_hostname | replace('*.','') if acmecnamezone is defined else cert_hostname_short }}.{{acmecnamezone}}"
#    type: TXT
#    value: "{{dnschallenge.challenge_data_dns['_acme-challenge.'+(cert_hostname | replace('*.','') if acmecnamezone is defined else cert_hostname_short)][0]}}"
#    state: absent
#  delegate_to: localhost
#  when: dnschallenge.changed
#
#- name: ensuring no existing TXT records for SubjectAltNames
#  route53:
#    aws_access_key: "{{aws_key |default(omit) }}"
#    aws_secret_key: "{{aws_secret |default(omit) }}"
#    zone: "{{ acmecnamezone | default(item.split('.', 1)[1]) }}"
#    record: "_acme-challenge.{{ item.split(':', 1)[1] | replace('*.','') if acmecnamezone is defined else item.split(':', 1)[1].split('.')[0] }}.{{acmecnamezone}}"
#    type: TXT
#    value: "{{dnschallenge.challenge_data_dns['_acme-challenge.'+(item.split(':', 1)[1] | replace('*.','') if acmecnamezone is defined else item.split(':', 1)[1].split('.')[0])][0]}}"
#    state: absent
#  delegate_to: localhost
#  with_items: "{{ subject_alt_names }}"
#  when: dnschallenge.changed and subject_alt_names is defined
