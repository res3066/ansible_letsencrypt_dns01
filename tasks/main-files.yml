---


- name: create key if necessary using local storage
  block:
    - name: check if cert key exists
      stat:
        path: "{{ host_specific_files }}/crypto/server.key"
      delegate_to: localhost
      register: cert_key_stat

    - name: openssl private key (specific to this cert)
      openssl_privatekey:
        path: "{{ host_specific_files }}/crypto/server.key"
        passphrase: "{{ openssl_passphrase | default(omit) }}"
        cipher: "{{ 'auto' if openssl_passphrase is defined else omit }}"
        type: RSA
        size: 2048
      delegate_to: localhost
      when: not cert_key_stat.stat.exists
  
- name: make the CSR (local)
  block:
    - name: making a certificate signing request
      openssl_csr:
        email_address: "{{ cert_emailaddress }}"
        common_name: "{{ cert_hostname }}"
        subject_alt_name: "{{ subject_alt_names | default(omit) }}"
        path: "{{ host_specific_files }}/crypto/server.csr"
        privatekey_path: "{{ host_specific_files }}/crypto/server.key"
        privatekey_passphrase: "{{ openssl_passphrase | default(omit) }}"
      register: csrresults

    - name: if we created a new csr (configuration changed), all existing certs are invalid
      file:
        path: "{{ host_specific_files }}/crypto/{{ item }}"
        state: absent
      with_items:
        - server-fullchain.crt
        - server-intermediate.crt
        - server.crt
      when: csrresults.changed
  delegate_to: localhost

- name: getting a challenge from {{ which_ca }} to put in the DNS (local)
  acme_certificate:
    account_key_src: "{{ omit if openssl_passphrase is defined else acme_account_key_file }}"
    account_key_content: "{{ lookup('ssl_key_text', acme_account_key_file, passphrase=openssl_passphrase) if openssl_passphrase is defined else omit }}"
    account_email: "{{ cert_emailaddress }}"
    src: "{{ host_specific_files }}/crypto/server.csr"
    cert: "{{ host_specific_files }}/crypto/server.crt"
    challenge: dns-01
    acme_directory: "https://{{ which_ca }}/directory"
    acme_version: 2
    # Renew if force_cert_renew variable set OR if the CSR changed
    # HOPEFULLY this shuts up ansible-lint and doesn't break anything RS 2020-08-06
# old line:    force: "{{ force_cert_renew | default( (csrresults['changed'] == true) | ternary('yes','no') ) }}"
# becomes new line below:
    force: "{{ force_cert_renew | default( (csrresults['changed']) | ternary('yes','no') ) }}"
    # Renew if the certificate has less than N days left on it (best practice says default probably 30)
    remaining_days: "{{ cert_renew_days }}"
  delegate_to: localhost
  register: dnschallenge

- name: Update challenges
  include_tasks: update-challenges.yml
  when: dnschallenge.changed

- name: asking {{ which_ca }} to sign our certs (local)
  acme_certificate:
    account_key_src: "{{ omit if openssl_passphrase is defined else acme_account_key_file }}"
    account_key_content: "{{ lookup('ssl_key_text', acme_account_key_file, passphrase=openssl_passphrase) if openssl_passphrase is defined else omit }}"
    account_email: "{{ cert_emailaddress }}"
    src: "{{ host_specific_files }}/crypto/server.csr"
    cert: "{{ host_specific_files }}/crypto/server.crt"
    fullchain: "{{ host_specific_files }}/crypto/server-fullchain.crt"
    chain: "{{ host_specific_files }}/crypto/server-intermediate.crt"
    challenge: dns-01
    acme_directory: "https://{{ which_ca }}/directory"
    remaining_days: "{{ cert_renew_days }}"
    force: "{{ force_cert_renew | default(false) }}"
    acme_version: 2
    data: "{{ dnschallenge }}"
  delegate_to: localhost
  when: dnschallenge.changed

