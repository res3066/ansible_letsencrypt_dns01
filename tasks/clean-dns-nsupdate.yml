---
# Preemptively getting rid of any existing TXT records.
# Note that you can not do an update if a record of RRTYPE exists at said node.
# Important for when you're debugging something that blew up in the past and left
# cruft in the DNS - you'll be wondering why you can't catch a break...

- name: ensuring no existing TXT records for CN (multi-server)
  nsupdate:
    key_algorithm: "{{ item.algorithm }}"
    key_name: "{{ item.key }}"
    key_secret: "{{ item.secret }}"
    server: "{{ lookup('dig', item.name) }}"
    zone: "{{ acmecnamezone | default(cert_hostname.split('.', 1)[1]) }}"
    record: "_acme-challenge.{{ cert_hostname | replace('*.','') if acmecnamezone is defined else cert_hostname_short }}"
    type: TXT
    value: "anything"
    state: absent
  delegate_to: localhost
  with_items:
    - "{{ acmeservers }}"
  when:
    - acmeservers is defined
    - dnschallenge.changed

- name: ensuring no existing TXT records for SubjectAltNames (multi-server)
  nsupdate:
    key_algorithm: "{{ item.0.algorithm }}"
    key_name: "{{ item.0.key }}"
    key_secret: "{{ item.0.secret }}"
    server: "{{ lookup('dig', item.0.name) }}"
    zone: "{{ acmecnamezone | default(item.1.split('.', 1)[1]) }}"
    record: "_acme-challenge.{{ item.1.split(':', 1)[1] | replace('*.','') if acmecnamezone is defined else item.1.split(':', 1)[1].split('.')[0] }}"
    type: TXT
    value: "anything"
    state: absent
  delegate_to: localhost
  with_nested:
    - "{{ acmeservers }}"
    - "{{ subject_alt_names }}"
  when:
    - acmeservers is defined
    - subject_alt_names is defined
    - dnschallenge.changed

# end multi-server support...


...

